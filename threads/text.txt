Задания (использовать потоки + классы синхронизации потоков)
1. Напишите программу для создания нескольких потоков и вывода
их имен.
2. Напишите программу для поиска простых чисел в заданном
диапазоне с использованием многопоточности. Разбейте диапазон на части и
назначьте каждому потоку свою часть для поиска простых чисел.
3. Напишите программу для вычисления факториала числа с
использованием нескольких потоков.
4. Напишите программу, которая параллельно вычисляет значения
сложной математической функции (например, факториал, числа Фибоначчи
или другое), используя несколько потоков.
Дайте пользователю возможность задавать количество потоков.
Каждый поток должен принимать на вход числа, на которых нужно произвести вычисления,
и возвращать результат.
Итоги вычислений всех потоков должны выводиться после завершения всех вычислений.
5. Напишите программу, которая сортирует большой массив чисел,
используя потоки. Основная идея состоит в том, чтобы разбить массив на
подмассивы, которые будут сортироваться в отдельных потоках. Затем нужно
объединить отсортированные подмассивы в единый отсортированный массив.
6. Создайте модель банкомата, который обслуживает несколько
клиентов одновременно. Каждый клиент (поток) может снимать деньги с
общего счета. Используйте синхронизацию, чтобы избежать неправильных
расчетов остатка.
Организуйте процесс так, чтобы клиенты ожидали, если на их счёте недостаточно средств.
7. Напишите программу, которая разбивает текстовый файл на
равные части и использует потоки для параллельного подсчета частоты
каждого слова. В конце нужно объединить результаты из всех потоков и
вывести итоговую статистику.
8. Реализуйте программу для параллельного поиска файлов в разных
каталогах с использованием потоков. Программа должна находить файлы,
соответствующие определенному паттерну, например, по расширению или
имени.
Используйте потоки, чтобы обрабатывать каждый каталог параллельно.
Реализуйте механизм сбора результатов из всех потоков и отображение их пользователю.
Обеспечьте контроль над количеством одновременно активных потоков.
9. Разработайте приложение-калькулятор, которое выполняет
сложные математические вычисления, такие как вычисление факториалов,
возведение в степень и интеграция, используя многопоточность для
параллельного выполнения операций.
Каждое вычисление запускается в отдельном потоке.
Объедините результаты вычислений из всех потоков.
Позаботьтесь об обработке ошибок и исключений, чтобы приложение оставалось
стабильным даже при сбоях в отдельных вычислениях.
10. Смоделируйте систему автопарковки с ограниченным
количеством мест. Автомобили приезжают и уезжают в случайное время.
Имплементируйте логику, проверяющую наличие свободных мест перед заездом
автомобиля.
Симулируйте время, которое автомобиль проводит на парковке, и его последующий выезд,
освобождая тем самым место.